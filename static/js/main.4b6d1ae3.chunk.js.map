{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/app-header/index.js","components/app-header/app-header.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add/index.js","components/item-add/item-add.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","done","important","number","classNames","className","onClick","type","Component","TodoList","todos","elements","map","elem","index","id","rest","key","SearchPanel","state","value","onSearchChange","event","term","target","setState","searched","placeholder","onChange","AppHeader","toDo","ItemStatusFilter","buttons","name","filtered","onFilterChange","styleButton","ItemAdd","handleChange","onSubmit","e","preventDefault","onAdded","items","length","disabled","isDisabled","App","maxId","todoData","filter","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","createTodoItem","toggleProperty","arr","propName","oldItem","indexOf","visible","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b6d1ae3.chunk.js","sourcesContent":["import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, done, important, number } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        }\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span>{`${number}.`}</span>\r\n                <span \r\n                    className='todo-list-item-label' \r\n                    onClick={onToggleDone}>\r\n                        { label }\r\n                </span>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n                <button type=\"button\"\r\n                        className=\"btn btn-outline-warning btn-sm float-right\"\r\n                        onClick={onDeleted}\r\n                        >\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((elem, index) => {\r\n  const {id, ...rest} = elem;\r\n    return (\r\n      <li key={index} className=\"list-group-item\">\r\n        <TodoListItem \r\n        {...rest}\r\n        number={index + 2}\r\n        onDeleted={() => onDeleted(id)}\r\n        onToggleDone={() => onToggleDone(id)}\r\n        onToggleImportant={() => onToggleImportant(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n    return (\r\n      <ul className=\"list-group todo-list\">\r\n        {elements}\r\n      </ul>\r\n    )\r\n  };\r\n\r\nexport default TodoList; ","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  onSearchChange = (event) => {\r\n    const term = event.target.value;\r\n\r\n    this.setState({value: term});\r\n\r\n    this.props.searched(term);\r\n};\r\n\r\n\r\n  render() {\r\n  return (\r\n  <input \r\n    type=\"text\" \r\n    className=\"form-control search-input\" \r\n    placeholder=\"Type here to search\" \r\n    value={this.state.value}\r\n    onChange={this.onSearchChange}\r\n    />\r\n  )\r\n  }\r\n};\r\n","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({toDo, done, important}) => {\r\n    return (\r\n      <div className=\"app-header d-flex\">\r\n        <h1>Todo List</h1>\r\n        <h2>{toDo} more to do, {important} important, {done} done </h2>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default AppHeader;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport './item-status-filter.css'\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const { filtered, onFilterChange } = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filtered === name;\r\n            const styleButton = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                className={`btn ${styleButton}`}\r\n                key={name}\r\n                onClick={() => onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"btn-group filter-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import ItemAdd from './item-add';\r\n\r\nexport default ItemAdd;","import React, { Component } from 'react';\r\nimport './item-add.css';\r\n\r\nexport default class ItemAdd extends Component {\r\n    state = {\r\n        value: ''\r\n      };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdded(this.state.value);\r\n        this.setState({\r\n            value: ''\r\n        });\r\n    }\r\n\r\n    isDisabled(items) {\r\n        return items.length > 20 ? true : false;\r\n    }\r\n    render() {\r\n        const { onAdded, items } = this.props;\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input type=\"text\" \r\n                       className=\"form-control\" \r\n                       placeholder=\"Enter new item\"\r\n                       value={this.state.value} \r\n                       onChange={this.handleChange}\r\n                       disabled={this.isDisabled(items)}/>\r\n                <button \r\n                className=\"btn btn-outline-secondary\" disabled={this.isDisabled(items)}>\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport TodoList from '../todo-list';\r\nimport SearchPanel from '../search-panel';\r\nimport AppHeader from '../app-header';\r\nimport ItemStatusFilter from '../item-status-filter'\r\nimport ItemAdd from '../item-add'\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n  \r\n  createTodoItem(label) {\r\n    return {\r\n      label, \r\n      important: false, \r\n      done: false, \r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const newArr = [\r\n        ...todoData.slice(0, idx), \r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n  const newItem = this.createTodoItem(text);\r\n    this.setState(({todoData}) => {\r\n      const newArr = [\r\n        ...todoData, \r\n        newItem\r\n      ];\r\n      return {\r\n        todoData: newArr\r\n      }\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\ntoggleProperty(arr, id, propName) {\r\n  const idx = arr.findIndex((el) => el.id === id);\r\n  const oldItem = arr[idx];\r\n  const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n    return [\r\n    ...arr.slice(0, idx), \r\n    newItem,\r\n    ...arr.slice(idx + 1)\r\n  ];\r\n\r\n}\r\n\r\nfilter(items, filter) {\r\n  switch(filter) {\r\n    case 'all': \r\n      return items;\r\n    case 'active':\r\n      return items.filter(e => !e.done);\r\n    case 'done':\r\n      return items.filter(e => e.done);\r\n    default:\r\n      return items;\r\n  }\r\n}\r\n\r\nonFilterChange = (filter) => {\r\n  this.setState({filter});\r\n}\r\n\r\nsearched = (text) => {\r\n  this.setState(({term}) => {\r\n    return {\r\n      term: text\r\n    };\r\n  });\r\n}\r\nsearch(term, items) {\r\n  if (term.length === 0) {\r\n    return items;\r\n  }\r\n  return items.filter(e => e.label.indexOf(term) > -1 );\r\n}\r\n\r\n  render() {\r\n    \r\n    const { todoData, term, filter } = this.state;\r\n    const visible = this.filter(\r\n      this.search(term, todoData), filter);\r\n    const doneCount = todoData\r\n                      .filter(el => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n    const important = todoData\r\n                      .filter(el => el.important).length;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} important={important}/>\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel searched={this.searched}/>\r\n          <ItemStatusFilter filtered={filter} onFilterChange={this.onFilterChange}/>\r\n        </div>\r\n        <TodoList \r\n        todos={visible}\r\n        onDeleted={this.deleteItem}\r\n        onToggleDone={this.onToggleDone}\r\n        onToggleImportant={this.onToggleImportant}\r\n        />\r\n        <ItemAdd \r\n        onAdded={this.addItem}\r\n        items={todoData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}